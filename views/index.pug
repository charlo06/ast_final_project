extends layout

block head
  // Here will go our css/js links
  script(type="text/javascript" src="/js/jquery-3.2.1.min.js" charset="utf-8")
  script(type="text/javascript" src="/js/bootstrap.min.js" charset="utf-8")
  script(type="text/javascript" src="/js/index.js" charset="utf-8")
  script(type="text/javascript" src="https://d3js.org/d3.v4.min.js" charset="utf-8")
  link(rel='stylesheet', href='/css/bootstrap.min.css')
  link(rel='stylesheet', href='/css/bootstrap-theme.min.css')

block content  
  div.container
    div.col-md-6.col-md-offset-3
      p #{text}
      button#show-metrics(type="button" class="btn btn-success") Bring the metrics
      #metrics
      
  script 
    :coffee-script
    
      chartdata = []
      # Set the dimensions of the canvas / graph
      margin = {top: 20, right: 20, bottom: 100, left: 50}
      width = $('#metrics').width() - margin.left - margin.right
      height = 400 - margin.top - margin.bottom

      # Set the ranges
      x = d3.scaleTime().range [0, width]
      y = d3.scaleLinear().range [height, 0]

      # Define the line
      valueline = d3.line()
      .x (d) -> x d.timestamp
      .y (d) -> y d.value

      # Adds the svg canvas
      svg = d3.select "#metrics"
      .append "svg"
      .attr "width", width + margin.left + margin.right
      .attr "height", height + margin.top + margin.bottom
      .append "g"
      .attr "transform", "translate(" + margin.left + "," + margin.top + ")"

      # Scale the range of the data
      x.domain d3.extent chartdata, (d) -> d.timestamp
      y.domain [0, d3.max chartdata, (d) -> d.value ]

      # Add the value line path
      svg.append "path"
        .data [chartdata]
        .attr "class", "line"
        .attr "d", valueline

      # Add the X Axis
      svg.append "g"
        .attr 'class', 'x axis'
        .attr 'transform', 'translate(0,' + height + ')'
        .call d3.axisBottom(x).tickFormat d3.timeFormat "%d/%m/%Y"
        .selectAll "text"
        .style "text-anchor", "end"
        .attr "dx", "-0.8em"
        .attr "dy", '0.15em'
        .attr 'transform', 'rotate(-65)'

      # Add the Y Axis
      svg.append "g"
        .attr 'class', 'y axis'
        .call d3.axisLeft y
      
      $('#show-metrics').click (e) ->
        e.preventDefault()
        $.getJSON "/metrics.json", {}, (data) ->
          content = "<ul>"
          for d in data
            content += "<li>timestamp: #{d.timestamp}, value: #{d.value}</li>"
          content += "</ul>"
          $('#metrics').append content
